{"version":3,"sources":["Components/TodoForm.js","Components/Todo.js","Components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","count","setCount","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","newCount","onSubmit","id","text","className","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","key","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removedArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dcaada1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const [count, setCount] = useState(0);\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newCount = count + 1\n    setCount(newCount)\n\n    props.onSubmit({\n      id:newCount,\n      text: input,\n    });\n    \n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add your task here'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n            Add todo\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { AiFillEdit } from 'react-icons/ai';\nimport {TiTick} from 'react-icons/ti';\n\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        <TiTick\n        onClick={() => completeTodo(todo.id)}\n        className='done-icon'\n        />\n        <MdDeleteForever\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <AiFillEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1>Todo WebApp</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './Components/TodoList'\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}